int t[1001][1001];
int lcs(string A, string B){
    int n = A.length();
    int m = B.length();
    
    for(int i = 0; i < n + 1; i++){
        for(int j = 0; j < m + 1; j++){
            if(i == 0 || j == 0){
                t[i][j] = 0;
            }
        }
    }
    
    for(int i = 1; i < n + 1; i++){
        for(int j = 1; j < m + 1; j++){
            if(A[i - 1] == B[j - 1]){
                t[i][j] = 1 + t[i - 1][j - 1];
            }
            else{
                t[i][j] = max(t[i - 1][j], t[i][j - 1]);
            }
        }
    }
    
    return t[n][m];
}

int lps(string A){
    string B = A;
    reverse(B.begin(), B.end());
    return lcs(A, B);
}

int minDeletions(string str, int n) { 
    //complete the function here 
    int len = str.length();
    int len_of_lps = lps(str);
    
    return len - len_of_lps;
}
