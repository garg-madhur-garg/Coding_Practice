/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)     {
        ListNode* p = l1;
        ListNode* q = l2;
        int carry = 0;
        int sum = 0;
        
        int x, y;
        ListNode* currnode = new ListNode(0);
        ListNode* newHead = currnode;
        while(p != NULL || q != NULL){
            
            x = (p != NULL) ? p->val : 0;
            y = (q != NULL) ? q->val : 0;
            
            sum = x + y + carry;
            carry = sum / 10;
            
            currnode->next = new ListNode(sum % 10);
            currnode = currnode->next;
            // ListNode node;
            // node->data = sum % 10;
            // node->next = NULL;
            if(p != NULL)
                p = p->next;
            if(q != NULL)
                q = q->next;
        }
        
        if(carry > 0){
            currnode->next = new ListNode(carry);
        }
        
        return newHead->next;
    }
};
