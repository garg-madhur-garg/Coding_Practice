class Solution {
public:
    string addStrings(string num1, string num2) {
        int n1 = num1.length();
        int n2 = num2.length();
        
        int carry = 0;
        string v;
        
        while(n1 > 0 || n2 > 0){
            if(n1 >= 1 && n2 >= 1){
                v.push_back(((num1[n1 - 1] - '0') + (num2[n2 - 1] - '0') + (carry))%10 + '0');
                carry = ((num1[n1 - 1] - '0') + (num2[n2 - 1] - '0') + (carry)) / 10;
                n1--;
                n2--;
            }
            else if(n1 <= 0 && n2 >= 1){
                v.push_back(((num2[n2 - 1] - '0') + (carry))%10 + '0');
                carry = ((num2[n2 - 1] - '0') + (carry) ) / 10;
                n2--;
            }
            else if(n2 <= 0 && n1 >= 1){
                v.push_back(((num1[n1 - 1] - '0') + (carry))%10 + '0');
                carry = ((num1[n1 - 1] - '0') + (carry)) / 10;
                    n1--;
            }
            
        }
        
        if(carry != 0){
            v.push_back(carry + '0');
        }
        
        reverse(v.begin(), v.end());
        return v;
    }
};
