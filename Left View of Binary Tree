/* A binary tree node

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */

//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
   // Your code here
   vector<int>ans;
   queue<Node*>q;
   
   if(root == NULL){
       return ans;
   }
   
   q.push(root);
   
   while(!q.empty()){
       int s = q.size();
       vector<int>level;
       
       for(int i = 0; i < s; i++){
           Node* node = q.front();
           q.pop();
           
           if(node->left != NULL){
               q.push(node->left);
           }
           if(node->right != NULL){
               q.push(node->right);
           }
           
           level.push_back(node->data);
       }
       
       ans.push_back(level[0]);
   }
   return ans;
}
