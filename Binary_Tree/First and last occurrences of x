int first(int arr[], int n, int x){
    int start = 0;
    int end = n - 1;
    int res = -1;
    
    while(start <= end){
        int mid = start + (end - start)/2;
        
        if(arr[mid] == x){
            res = mid;
            end = mid - 1;
        }
        else if(arr[mid] < x){
            start = mid + 1;
        }
        else{
            end = mid - 1;
        }
    }
    
    return res;
}

int last(int arr[], int n, int x){
    int start = 0;
    int end = n - 1;
    int res = -1;
    
    while(start <= end){
        int mid = start + (end - start)/2;
        
        if(arr[mid] == x){
            res = mid;
            start = mid + 1;
        }
        else if(arr[mid] < x){
            start = mid + 1;
        }
        else{
            end = mid - 1;
        }
    }
    
    return res;
}

vector<int> find(int arr[], int n , int x )
{
    // code here
    int f = first(arr, n, x);
    int l = last(arr, n, x);
    
    vector<int>v(2);
    v[0] = f;
    v[1] = l;
    
    return v;
}
