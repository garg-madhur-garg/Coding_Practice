class Solution{
public:	
	/* if x is present in arr[] then returns the count
		of occurrences of x, otherwise returns 0. */
		
	int f(int arr[], int n, int x){
	    int start = 0;
	    int end = n - 1;
	    int res = -1;
	    
	    while(start <= end){
	        int mid = start + (end - start)/2;
	        
	        if(arr[mid] == x){
	            res = mid;
	            end = mid - 1;
	        }
	        else if(arr[mid] < x){
	            start = mid + 1;
	        }
	        else{
	            end = mid - 1;
	        }
	    }
	    return res;
	}
	
	int l(int arr[], int n, int x){
	    int start = 0;
	    int end = n - 1;
	    int res = -1;
	    
	    while(start <= end){
	        int mid = start + (end - start)/2;
	        
	        if(arr[mid] == x){
	            res = mid;
	            start = mid + 1;
	        }
	        else if(arr[mid] < x){
	            start = mid + 1;
	        }
	        else{
	            end = mid - 1;
	        }
	    }
	    return res;
	}
	
	
	int count(int arr[], int n, int x) {
	    // code here
	    int first = f(arr, n, x);
	    int last = l(arr, n, x);
	    
	    if(first == -1 || last == -1){
	        return 0;
	    }
	    else{
	        return last - first + 1;
	    }
	}
};
