class Solution
{
    public:
    void AddAtTail(Node* &tail, Node* curr){
        tail->next = curr;
        tail = curr;
    }
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        Node* zerohead = new Node(-1);
        Node* zerotail = zerohead;
        
        Node* onehead = new Node(-1);
        Node* onetail = onehead;
        
        Node* twohead = new Node(-1);
        Node* twotail = twohead;
        
        Node* curr = head;
        while(curr != NULL){
            if(curr->data == 0){
                AddAtTail(zerotail, curr);
            }
            else if(curr->data == 1){
                AddAtTail(onetail, curr);
            }
            else{
                AddAtTail(twotail, curr);
            }
            curr = curr->next;
        }
        
        //Merge 3 lists
        
        // 1s list not empty
        if(onehead->next != NULL){
            zerotail->next = onehead->next;
            onetail->next = twohead->next;
            twotail->next = NULL;
        }
        // 1s list empty
        else{
            zerotail->next = twohead->next;
            twotail->next = NULL;
        }
        
        head = zerohead->next;
        
        delete zerohead;
        delete onehead;
        delete twohead;
        
        return head;
    }
};
