/*
struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
*/
class Solution{
public:
    void insertAtTail(Node* &tail, Node* curr){
        tail->next = curr;
        tail = curr;
    }
    
    Node* divide(int N, Node *head){
        // code here
        Node* evenhead = new Node(-1);
        Node* eventail = evenhead;
        
        Node* oddhead = new Node(-1);
        Node* oddtail = oddhead;
        
        // build two list for even and odd
        Node* curr = head;
        while(curr != NULL){
            int val = curr->data;
            if(val%2 == 0){
                insertAtTail(eventail, curr);
            }
            else{
                insertAtTail(oddtail, curr);
            }
            curr = curr->next;
        }
        
        //Merge both lists
        if(evenhead->next == NULL){
            oddtail->next = NULL;
            head = oddhead->next;
            return head;
        }
        else if(oddhead->next == NULL){
            eventail->next = NULL;
            head = evenhead->next;
            return head;
        }
        else{
            eventail->next = oddhead->next;
            oddtail->next = NULL;
            head = evenhead->next;
            return head;
        }
    }
};
