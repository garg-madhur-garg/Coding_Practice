class Solution {
public:
    string reorganizeString(string s) {
        unordered_map<char, int> mp;
        
        for(int i = 0; i < s.length(); i++){
            mp[s[i]]++;
        }
        
        priority_queue<pair<int, char> >maxH;
        
        for(auto i = mp.begin(); i != mp.end(); i++){
            maxH.push({i->second, i->first});
        }
        
        string ans = "";
        while(maxH.size() > 1){
            auto top1 = maxH.top();
            maxH.pop();
            
            auto top2 = maxH.top();
            maxH.pop();
            
            ans = ans + top1.second;
            ans = ans + top2.second;
            
            top1.first--;
            top2.first--;
            
            if(top1.first != 0){
                maxH.push(top1);
            }
            if(top2.first != 0){
                maxH.push(top2);
            }
        }
        
        while(maxH.empty() == false){
            if(maxH.top().first == 1){
                ans = ans + maxH.top().second;
                maxH.pop();
            }
            else{
                return "";
            }
        }
        
        return ans;
    }
};
