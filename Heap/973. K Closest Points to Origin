class Solution {
public:
    int dis(vector<int> v){
        int ans = v[0]*v[0] + v[1]*v[1];
        return ans;
    }
    
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue< pair<int, vector<int> > > maxH;
        vector<vector<int> > ans;
        
        int n = points.size();
        
        for(int i = 0; i < n; i++){
            maxH.push({dis(points[i]), points[i]});
            
            if(maxH.size() > k){
                maxH.pop();
            }
        }
        while(maxH.empty() == false){
            ans.push_back(maxH.top().second);
            maxH.pop();
        }
        
        return ans;
    }
};
